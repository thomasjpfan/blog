<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>thomasjpfan.com - Blog</title><link href="https://www.thomasjpfan.com/" rel="alternate"></link><link href="https://www.thomasjpfan.com/feeds/blog.atom.xml" rel="self"></link><id>https://www.thomasjpfan.com/</id><updated>2018-09-12T09:29:00-05:00</updated><entry><title>Survival Regression Analysis on Customer Churn</title><link href="https://www.thomasjpfan.com/2018/09/survival-regression-analysis-on-customer-churn/" rel="alternate"></link><published>2018-09-12T09:29:00-05:00</published><updated>2018-09-12T09:29:00-05:00</updated><author><name>Thomas J. Fan</name></author><id>tag:www.thomasjpfan.com,2018-09-12:2018/09/survival-regression-analysis-on-customer-churn/</id><summary type="html">&lt;p&gt;In this post, we will analyze Telcon's Customer Churn Dataset and figure out what factors contribute to churn. By definition, a customer churns when they unsubscribe or leave a service. With survival analysis, the customer churn event is analogous to death. Armed with the survival function, we will calculate what is the optimum monthly rate to maximize a customers lifetime value.&lt;/p&gt;</summary><category term="python"></category><category term="statistics"></category></entry><entry><title>Nuclei Image Segmentation Tutorial</title><link href="https://www.thomasjpfan.com/2018/07/nuclei-image-segmentation-tutorial/" rel="alternate"></link><published>2018-07-31T09:29:00-05:00</published><updated>2018-07-31T09:29:00-05:00</updated><author><name>Thomas J. Fan</name></author><id>tag:www.thomasjpfan.com,2018-07-31:2018/07/nuclei-image-segmentation-tutorial/</id><summary type="html">&lt;p&gt;In this tutorial, we will implement a UNet to solve Kaggle's 2018 Data Science Bowl Competition. The challenge asks participants to find the location of nuclei from images of cells.&lt;/p&gt;</summary><category term="deep learning"></category><category term="machine learning"></category><category term="python"></category></entry><entry><title>Rodents Of NYC</title><link href="https://www.thomasjpfan.com/2017/08/rodents-of-nyc/" rel="alternate"></link><published>2017-08-28T09:29:00-05:00</published><updated>2017-08-28T09:29:00-05:00</updated><author><name>Thomas J. Fan</name></author><id>tag:www.thomasjpfan.com,2017-08-28:2017/08/rodents-of-nyc/</id><summary type="html">&lt;p&gt;On July 2017, NYC has announced a $32 million plan towards reducing rodent populations. The plan will fully take into affect at the end of 2017. We will analyze how NYC's current process to control rodent population is successful by using 311 complaint data and rodent inspection data.&lt;/p&gt;</summary><category term="eda"></category><category term="python"></category></entry><entry><title>Hassle Free UNets</title><link href="https://www.thomasjpfan.com/2017/08/hassle-free-unets/" rel="alternate"></link><published>2017-08-05T09:29:00-05:00</published><updated>2017-08-05T09:29:00-05:00</updated><author><name>Thomas J. Fan</name></author><id>tag:www.thomasjpfan.com,2017-08-05:2017/08/hassle-free-unets/</id><summary type="html">&lt;p&gt;Constructing a UNet requires you to keep track of every signal size that flow through the UNet. This can lead to size mismatches when constructing the neutral network. To remedy this issue, I created a small PyTorch UNet module that calculates the sizes for you. You can even customize the building blocks used to construct the UNet.&lt;/p&gt;</summary><category term="deep learning"></category></entry><entry><title>Bayesian Coin Flips</title><link href="https://www.thomasjpfan.com/2015/09/bayesian-coin-flips/" rel="alternate"></link><published>2015-09-12T09:29:00-05:00</published><updated>2015-09-12T09:29:00-05:00</updated><author><name>Thomas J. Fan</name></author><id>tag:www.thomasjpfan.com,2015-09-12:2015/09/bayesian-coin-flips/</id><summary type="html">&lt;p&gt;In this blog post, we will look at the coin flip problem in a bayesian point of view. Most of this information is already widely available through the web, but I want to write it up anyways, so I can go into more involved bayesian concepts in future posts.&lt;/p&gt;</summary><category term="statistics"></category><category term="python"></category></entry><entry><title>Statistical Power of Coin Flips</title><link href="https://www.thomasjpfan.com/2015/08/statistical-power-of-coin-flips/" rel="alternate"></link><published>2015-08-29T09:29:00-05:00</published><updated>2015-08-29T09:29:00-05:00</updated><author><name>Thomas J. Fan</name></author><id>tag:www.thomasjpfan.com,2015-08-29:2015/08/statistical-power-of-coin-flips/</id><summary type="html">&lt;p&gt;There are a few topics that I wish were taught in an introduction to statistics undergraduate course. One of those topics is Bayesian Statistics, the other is Statistical Power. In this post, I go through the analysis of flipping coins, and how to calculate statistical power for determining if a coin is biased or fair.&lt;/p&gt;</summary><category term="statistics"></category><category term="python"></category></entry><entry><title>PCA Before Regression</title><link href="https://www.thomasjpfan.com/2015/08/pca-before-regression/" rel="alternate"></link><published>2015-08-15T19:29:00-05:00</published><updated>2015-08-15T19:29:00-05:00</updated><author><name>Thomas J. Fan</name></author><id>tag:www.thomasjpfan.com,2015-08-15:2015/08/pca-before-regression/</id><summary type="html">&lt;p&gt;Sometimes it can be quite harmful to remove features in a data set. This entry gives an example of when principle component analysis can drastically change the result of a simple linear regression.&lt;/p&gt;</summary><category term="machine learning"></category><category term="python"></category></entry><entry><title>High n-Dimensional Spheres Are Only Skin Deep</title><link href="https://www.thomasjpfan.com/2014/08/high-n-dimensional-spheres-are-only-skin-deep/" rel="alternate"></link><published>2014-08-15T09:29:00-05:00</published><updated>2014-08-15T09:29:00-05:00</updated><author><name>Thomas J. Fan</name></author><id>tag:www.thomasjpfan.com,2014-08-15:2014/08/high-n-dimensional-spheres-are-only-skin-deep/</id><summary type="html">&lt;p&gt;For the past few months, I've been implementing machine learning algorithms and one of the small details about higher dimensional spheres caught me by surprise.&lt;/p&gt;</summary><category term="math"></category></entry><entry><title>Hold on Tight!</title><link href="https://www.thomasjpfan.com/2014/07/hold-on-tight/" rel="alternate"></link><published>2014-07-04T09:29:00-05:00</published><updated>2014-07-04T09:29:00-05:00</updated><author><name>Thomas J. Fan</name></author><id>tag:www.thomasjpfan.com,2014-07-04:2014/07/hold-on-tight/</id><summary type="html">&lt;p&gt;There are quite a few places where one can go indoor rock climbing in NYC. To keep the climber safe, the climber wears a harness that is attached to to a rope. The rope is then wrapped around a pipe at least one time and then at least 160 degrees more depending on where your buddy is holding on to the other end. The amount of force needed to hold a climber up is surprisingly low because of how friction helps prevents the rope from slipping off the pipe.&lt;/p&gt;</summary><category term="physics"></category></entry><entry><title>Maximum of free damped oscillators</title><link href="https://www.thomasjpfan.com/2014/05/maximum-of-free-damped-oscillators/" rel="alternate"></link><published>2014-05-02T09:29:00-05:00</published><updated>2014-05-02T09:29:00-05:00</updated><author><name>Thomas J. Fan</name></author><id>tag:www.thomasjpfan.com,2014-05-02:2014/05/maximum-of-free-damped-oscillators/</id><summary type="html">&lt;p&gt;There are still elementary facts about free damped oscillators that catch me off guard from time to time. One of these facts is that the maximum of the damped oscillation solution is different from the envelope that is tangent to it.&lt;/p&gt;</summary><category term="physics"></category><category term="math"></category><category term="python"></category></entry><entry><title>My Current Cpp Makefile</title><link href="https://www.thomasjpfan.com/2014/01/my-current-cpp-makefile/" rel="alternate"></link><published>2014-01-04T14:51:00-05:00</published><updated>2014-01-04T14:51:00-05:00</updated><author><name>Thomas J. Fan</name></author><id>tag:www.thomasjpfan.com,2014-01-04:2014/01/my-current-cpp-makefile/</id><summary type="html">&lt;p&gt;When I took my first programming course at Polytech, I used a Integrated development environment (IDE) called Visual Studio. It magically complied all my files together and formed an executable. Now a days, I've moved on from using IDEs and switch to using a text editor, Sublime Text. As the C++ code I wrote started to get more complicated and span multiple files, I needed a way to systematically complied the files together. Thus, I created a Makefile to build and organize my C++ files...&lt;/p&gt;</summary><category term="cpp"></category><category term="programming"></category></entry></feed>